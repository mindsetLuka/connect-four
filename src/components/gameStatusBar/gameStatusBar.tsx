import { GameStatus, Player, ValidatorStep } from '@/shared/types/index.types';

type GameStatusBarProps = {
    gameStatus: GameStatus,
    currentStep: ValidatorStep | null,
    currentPlayer: Player
}

export default function GameStatusBar({
  gameStatus,
  currentStep,
  currentPlayer,
}: GameStatusBarProps) {
  const getPlayerName = (player: Player) => (player === Player.First ? '–ò–≥—Ä–æ–∫ 1' : '–ò–≥—Ä–æ–∫ 2');

  const getStatusMessage = () => {
    if (gameStatus === GameStatus.Win && currentStep?.winner) {
      const winnerPlayer = currentStep.winner.who === 'player_1' ? Player.First : Player.Second;
      return `üéâ ${getPlayerName(winnerPlayer)} –ø–æ–±–µ–¥–∏–ª!`;
    }
    if (gameStatus === GameStatus.Draw) return 'ü§ù –ù–∏—á—å—è!';
    if (gameStatus === GameStatus.Pending) return `–•–æ–¥: ${getPlayerName(currentPlayer)}`;
    return '–í—ã–±–µ—Ä–∏—Ç–µ —Ä–µ–∂–∏–º –∏ –Ω–∞–∂–º–∏—Ç–µ –Ω–∞ –∫–æ–ª–æ–Ω–∫—É, —á—Ç–æ–±—ã –Ω–∞—á–∞—Ç—å –∏–≥—Ä—É';
  };

  return (
    <div className="text-center mb-3">
      <p className="text-base md:text-lg text-white font-semibold">{getStatusMessage()}</p>
      <p className="text-xs md:text-sm text-white/70 mt-1 leading-relaxed">
                –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ ‚Üê ‚Üí –∏–ª–∏ –Ω–∞–∂–∞—Ç–∏–µ –¥–ª—è –≤—ã–±–æ—Ä–∞ –∫–æ–ª–æ–Ω–∫–∏<br />
                Enter –∏–ª–∏ –Ω–∞–∂–∞—Ç–∏–µ –¥–ª—è —Ä–∞–∑–º–µ—â–µ–Ω–∏—è —Ñ–∏—à–∫–∏
      </p>
    </div>
  );
}
